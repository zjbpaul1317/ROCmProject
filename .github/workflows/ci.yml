name: CI - ROCm and Xilinx DMA RDMA Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    # Checkout code from the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Install ROCm SDK
    - name: Install ROCm SDK
      run: |
        sudo apt update
        sudo apt install -y wget gnupg
        # Add ROCm repository
        wget -qO - http://repo.radeon.com/rocm/rocm-keys.asc | gpg --dearmor -o /usr/share/keyrings/rocm-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/rocm-archive-keyring.gpg] http://repo.radeon.com/rocm/apt/debian/ rocm main" | sudo tee /etc/apt/sources.list.d/rocm.list
        sudo apt update
        sudo apt install -y rocm-dkms rocm-dev rocm-utils
        echo 'export PATH=/opt/rocm/bin:$PATH' >> ~/.bashrc
        echo 'export LD_LIBRARY_PATH=/opt/rocm/lib:$LD_LIBRARY_PATH' >> ~/.bashrc
        source ~/.bashrc

    # Install Xilinx DMA driver
    - name: Install Xilinx DMA driver
      run: |
        sudo apt install -y xilinx-dma-driver

    # Set up GPU and FPGA environment (simulation)
    - name: Set up hardware (simulation)
      run: |
        # Assuming hardware is already set up (e.g., FPGA and GPU are correctly connected)
        # You can simulate hardware setup steps here, or test the connection if needed
        lspci | grep Xilinx
        ls -l /dev/xdma0_c2h_0
        ls -l /dev/xdma0_h2c_0

    # Build the ROCm program
    - name: Build ROCm Program
      run: |
        hipcc -o server server.cpp

    # Run the ROCm program
    - name: Run the ROCm Program
      run: |
        sudo ./server
      
    # Clean up (optional)
    - name: Clean up
      run: |
        rm -f server
